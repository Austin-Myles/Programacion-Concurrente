Existen N personas que deben imprimir un trabajo cada una. Resolver cada ítem usando
semáforos:

a- Implemente una solución suponiendo que existe una única impresora compartida por
todas las personas, y las mismas la deben usar de a una persona a la vez, sin importar
el orden. Existe una función Imprimir(documento) llamada por la persona que simula el
uso de la impresora. Sólo se deben usar los procesos que representan a las Personas.

sem mutex = 1;

Process Persona[id:1..N]{

    Documento doc;

    p(mutex);
    Imprimir(doc);
    v(mutex);
}

b- Modifique la solución de (a) para el caso en que se deba respetar el orden de llegada.

sem mutex = 1, espera[N] = ([N]0);
cola C;
bool libre = True;
int aux;

Process Persona[id:1..N]{

    Documento doc;

    p(mutex);
    if(libre){
        libre = False;
        v(mutex);
    }
    else{
        C.push(id);
        v(mutex);
        p(espera[id]);
    }

    Imprimir(doc);
    
    if(empty(C)){
        libre = True;
    }
    else{
        aux = C.pop();
        v(espera[aux]);
    }

}

c- Modifique la solución de (a) para el caso en que se deba respetar estrictamente el
orden dado por el identificador del proceso (la persona X no puede usar la impresora
hasta que no haya terminado de usarla la persona X-1).

sem mutex = 1, espera[N] = ([N]0);
int act = 1;

Process Persona[id:1..N]{
    Documento doc;

    p(mutex);
    if(id != act){
        v(mutex);
        p(espera[id]);
    }
    else{
        v(mutex);
    }

    p(mutex);
    Imprimir(doc);
    act++;
    v(espera[act]);
    v(mutex);
}

d- Modifique la solución de (b) para el caso en que además hay un proceso Coordinador
que le indica a cada persona que es su turno de usar la impresora.

sem mutex = 1, espera[N] = ([N]0), avisar = 0;
cola C;
bool libre = True;
int aux;

Process Persona[id:1..N]{

    Documento doc;

    p(mutex);
    if(libre){
        libre = False;
        v(mutex);
    }
    else{
        C.push(id);
        v(mutex);
        p(espera[id]);
    }

    Imprimir(doc);
    
    if(empty(C)){
        libre = True;
    }
    else{
        v(avisar);
    }

}

Process Coordinador{
    while(True){
        p(avisar);
        aux = C.pop();
        v(espera[aux]);
    }
}

e- Modificar la solución (d) para el caso en que sean 5 impresoras. El coordinador le
indica a la persona cuando puede usar una impresora, y cual debe usar

sem mutex = 1,mutexC = 1, espera[N] = ([N]0), impresora[5]=([5]1), avisar = 0;
cola C, I;
int aux, imp[N];

Process Persona[id:1..N]{

    Documento doc;

    p(mutex);
    C.push(id);
    v(mutex);

    v(avisar);
    p(espera[aux]);

    p(mutex);
    Imprimir(imp,doc);
    I.push(imp[aux]);
    v(mutex);



}

Process Coordinador{
    while(True){
        p(avisar);

        p(mutexC);
        imp = I.pop();
        aux = C.pop();
        imp[aux] = I.pop();
        v(mutexC);
        
        v(espera[aux]);
    }
}