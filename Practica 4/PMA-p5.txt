Resolver la administración de las impresoras de una oficina. Hay 3 impresoras, N usuarios y 
1 director.  Los  usuarios  y  el  director  están  continuamente  trabajando  y  cada  tanto  envían 
documentos  a  imprimir.  Cada  impresora,  cuando  está  libre,  toma  un  documento  y  lo 
imprime,  de  acuerdo  con  el  orden  de  llegada,  pero  siempre  dando  prioridad  a  los  pedidos 
del  director.  
Nota:  los  usuarios  y  el  director  no  deben  esperar  a  que  se  imprima  el documento.

chan esperaUsuarios(int);
chan esperaDir(int);
chan sigDir(int);
chan sigUser[N](int);
chan documentos[3](String);
chan liberados(int);

Process Coordinador{

    cola impresoras; //Ya cargada
    int idUser, idDir, impAux;

    while(True){
        if(!impresoras.empty()){
            impAux = impresoras.pop();

            if(empty(esperaDir)){
                if(!empty(esperaUsuarios)){
                    receive esperaUsuarios(idUser);
                    send sigUser[idUser](impAux);
                }
            }
            else{
                receive esperaDir(idDir);
                send sigDir(impAux);
            }
        }
        else{
            receive liberados(impAux);
            impresoras.push(impAux);
        }

    }
}

Process Impresora[id:1..3]{
    String doc;

    receive documentos[id](doc);
    //Lo imprime

    send liberados(id);
}

Process Director{
    String doc;
    int impAux;

    while(True){
        send esperaDir(impAux);
        receive sigDir(impAux);
        send documentos[impAux](doc);
    }
}

Process Usuario[id:1..N]{
    String doc;
    int impAux;

    while(True){
        send esperaDir(id);
        receive sigUser[id](impAux);
        send documentos[impAux](doc);
    }
}