Simular  la  atención  en  un  locutorio  con  10  cabinas  telefónicas,  el  cual  tiene  un  empleado 
que se encarga de atender a N clientes. 
Al llegar, cada cliente espera hasta que el empleado  le  indique  a  qué  cabina  ir,  la  usa  y  
luego  se  dirige  al  empleado  para  pagarle.  
El  empleado  atiende a los clientes en el orden en que hacen los pedidos, pero siempre dando prioridad a 
los  que  terminaron  de  usar  la  cabina.  A  cada  cliente  se  le  entrega  un  ticket  factura.  
Nota: 
maximizar la concurrencia; 
suponga que hay una función  Cobrar() llamada por el empleado que simula que el empleado le cobra al cliente.

chan Llegada(int);
chan Respuesta[N](int);
chan Pagar(int);
chan Retirarse[N]();

Process Empleado{

    cola cabinasAux; //Se dispone de la cola cargada
    int idAux, cabina;
    Ticket factura;

    while(True){
        if(cabinasAux.empty()){
            receive Pagar(idAux,cabina);
            factura = Cobrar(cabina);
            cabinasAux.push(cabina);
            send Retirarse[idAux](factura);
        }
        receive Llegada(idAux);
        cabina = cabinasAux.pop();
        send Respuesta[idAux](cabina);
        receive Pagar(idAux,cabina);
        factura = Cobrar(cabina);
        cabinasAux.push(cabina);
        send Retirarse[idAux](factura);
    }
}

Process Cliente[id:1..N]{
    int idCab;
    Ticket factura;

    send Llegada(id);
    receive Respuesta[id](idCab);
    usarCabina(idCab);
    send Pagar(id,idCab);
    receive Retirarse(factura);
}

//Ponele...