Se desea modelar el funcionamiento de un banco en el cual existen 5 cajas para realizar pagos. 
Existen P clientes que desean hacer un pago. Para esto, cada una selecciona la caja donde hay menos personas Seleccionado; 
una vez seleccionada, espera a ser atendido. En cada caja, los clientes son atendidos por orden de llegada por los cajeros. 
Luego del pago, se les entrega un comprobante. Nota: maximizando la concurrencia.

chan Llegada(int);
chan Caja[1..P](int);
chan Espera[1..5](int, String);
chan Atencion[1..P](int);
chan Libre[1..5](int);

Process Cajero[id:1..5]{
    int idC;
    String tramite, comprobante;
    
    while(True){
        receive Espera[id](idC, tramite);
        comprobante = Atender(tramite);
        send Atencion[idC](comprobante);
        send Libre[id](id);
    }
}

Process Cliente[id:1..P]{
    int auxCaja;
    String comprobante;

    send Llegada(id);
    receive Caja[id](auxCaja);
    send Espera[auxCaja](id, tramite);
    receive Atencion[id](comprobante);
    
}

Process Coordinador{
    int cantCaja[5] = ([5]0);
    int idC, aux;

    while(True){
        if(!empty(Libre)){
            receive Libre(aux);
            cantCaja[aux]--;
        }
        if(!empty(Llegada)){
            receive Llegada(idC);
            aux = obtenerCajaMenor(cantCaja);
            send Caja[idC](aux);
            cantCaja[aux]++;
        }
    }

}
